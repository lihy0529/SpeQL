[
    {
        "input": "-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) AS inter \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales)) AS sales_data \nGROUP BY channel, i_brand_id, i_class_id, i_category_id\n/*CURSOR_IDENTIFIER*/;",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"INTER\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"INTER\" AS \"INTER\" ON \"INTER\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"INTER\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"INTER\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"SALES_DATA\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" CROSS JOIN \"_U_1\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) ) SELECT \"SALES_DATA\".\"CHANNEL\" AS \"CHANNEL\" , \"SALES_DATA\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"SALES_DATA\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"SALES_DATA\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"SALES_DATA\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"SALES_DATA\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"SALES_DATA\" AS \"SALES_DATA\" GROUP BY \"SALES_DATA\".\"CHANNEL\" , \"SALES_DATA\".\"I_BRAND_ID\" , \"SALES_DATA\".\"I_CLASS_ID\" , \"SALES_DATA\".\"I_CATEGORY_ID\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_1\" AS SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 0.315428,
                    "execution_time": 0.120865,
                    "compile_time": 0.000249,
                    "planning_time": 0.023245,
                    "create_size": 896
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 0.399651,
                    "execution_time": 0.136034,
                    "compile_time": 0.000271,
                    "planning_time": 0.089134,
                    "create_size": 896
                }
            },
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_2\" AS SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 33.345615,
                    "execution_time": 33.204955,
                    "compile_time": 0.0008,
                    "planning_time": 0.084835,
                    "create_size": 192
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 33.336678,
                    "execution_time": 33.075972,
                    "compile_time": 0.000791,
                    "planning_time": 0.202376,
                    "create_size": 192
                }
            },
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_3\" AS SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 0.08095,
                    "execution_time": 0.031597,
                    "compile_time": 0.00026,
                    "planning_time": 0.02414,
                    "create_size": 20
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 0.14489,
                    "execution_time": 0.031925,
                    "compile_time": 0.000262,
                    "planning_time": 0.086321,
                    "create_size": 20
                }
            },
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS INTER WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS SALES_DATA GROUP BY CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales)) \nGROUP BY channel, i_brand_id, i_class_id, i_category_id\n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"_Q_1\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" CROSS JOIN \"_U_1\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) ) SELECT \"_Q_1\".\"CHANNEL\" AS \"CHANNEL\" , \"_Q_1\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"_Q_1\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"_Q_1\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"_Q_1\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"_Q_1\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"_Q_1\" AS \"_Q_1\" GROUP BY \"_Q_1\".\"CHANNEL\" , \"_Q_1\".\"I_BRAND_ID\" , \"_Q_1\".\"I_CLASS_ID\" , \"_Q_1\".\"I_CATEGORY_ID\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) GROUP BY CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": null,
        "optimize": null,
        "create": null,
        "query": null,
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales)) \nGROUP BY channel, \n         i_brand_id, \n         i_class_id, \n         i_category_id \nORDER BY channel, \n         i_brand_id, \n         i_class_id, \n         i_category_id \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"_Q_1\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" CROSS JOIN \"_U_1\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) ) SELECT \"_Q_1\".\"CHANNEL\" AS \"CHANNEL\" , \"_Q_1\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"_Q_1\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"_Q_1\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"_Q_1\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"_Q_1\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"_Q_1\" AS \"_Q_1\" GROUP BY \"_Q_1\".\"CHANNEL\" , \"_Q_1\".\"I_BRAND_ID\" , \"_Q_1\".\"I_CLASS_ID\" , \"_Q_1\".\"I_CATEGORY_ID\" ORDER BY \"CHANNEL\" NULLS LAST , \"I_BRAND_ID\" NULLS LAST , \"I_CLASS_ID\" NULLS LAST , \"I_CATEGORY_ID\" NULLS LAST"
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) GROUP BY CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID ORDER BY CHANNEL NULLS FIRST , I_BRAND_ID NULLS FIRST , I_CLASS_ID NULLS FIRST , I_CATEGORY_ID NULLS FIRST LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales)) final\n/*CURSOR_IDENTIFIER*/\nGROUP  BY channel, \n          i_brand_id, \n          i_class_id, \n          i_category_id;",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"FINAL\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" CROSS JOIN \"_U_1\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) ) SELECT \"FINAL\".\"CHANNEL\" AS \"CHANNEL\" , \"FINAL\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"FINAL\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"FINAL\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"FINAL\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"FINAL\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"FINAL\" AS \"FINAL\" GROUP BY \"FINAL\".\"CHANNEL\" , \"FINAL\".\"I_BRAND_ID\" , \"FINAL\".\"I_CLASS_ID\" , \"FINAL\".\"I_CATEGORY_ID\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS FINAL GROUP BY CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) ) AS final_result\nGROUP BY channel, \n         i_brand_id, \n         i_class_id, \n         i_category_id; \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"FINAL_RESULT\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" CROSS JOIN \"_U_1\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) ) SELECT \"FINAL_RESULT\".\"CHANNEL\" AS \"CHANNEL\" , \"FINAL_RESULT\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"FINAL_RESULT\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"FINAL_RESULT\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"FINAL_RESULT\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"FINAL_RESULT\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"FINAL_RESULT\" AS \"FINAL_RESULT\" GROUP BY \"FINAL_RESULT\".\"CHANNEL\" , \"FINAL_RESULT\".\"I_BRAND_ID\" , \"FINAL_RESULT\".\"I_CLASS_ID\" , \"FINAL_RESULT\".\"I_CATEGORY_ID\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS FINAL_RESULT GROUP BY CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales) AS total_sales, \n               Sum(number_sales) AS total_number_sales \nFROM  (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales)) a\nGROUP BY channel, \n         i_brand_id, \n         i_class_id, \n         i_category_id \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"A\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" CROSS JOIN \"_U_1\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) ) SELECT \"A\".\"CHANNEL\" AS \"CHANNEL\" , \"A\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"A\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"A\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"A\".\"SALES\" ) AS \"TOTAL_SALES\" , SUM ( \"A\".\"NUMBER_SALES\" ) AS \"TOTAL_NUMBER_SALES\" FROM \"A\" AS \"A\" GROUP BY \"A\".\"CHANNEL\" , \"A\".\"I_BRAND_ID\" , \"A\".\"I_CLASS_ID\" , \"A\".\"I_CATEGORY_ID\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) AS TOTAL_SALES , SUM ( NUMBER_SALES ) AS TOTAL_NUMBER_SALES FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS A GROUP BY CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2\n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales)\n     ) final_sales\nGROUP BY channel, \n         i_brand_id, \n         i_class_id, \n         i_category_id\n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"FINAL_SALES\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" CROSS JOIN \"_U_1\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) ) SELECT \"FINAL_SALES\".\"CHANNEL\" AS \"CHANNEL\" , \"FINAL_SALES\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"FINAL_SALES\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"FINAL_SALES\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"FINAL_SALES\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"FINAL_SALES\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"FINAL_SALES\" AS \"FINAL_SALES\" GROUP BY \"FINAL_SALES\".\"CHANNEL\" , \"FINAL_SALES\".\"I_BRAND_ID\" , \"FINAL_SALES\".\"I_CLASS_ID\" , \"FINAL_SALES\".\"I_CATEGORY_ID\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS FINAL_SALES GROUP BY CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n       i_brand_id, \n       i_class_id, \n       i_category_id, \n       Sum(sales), \n       Sum(number_sales) \nFROM   (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales)) a \nGROUP  BY channel, i_brand_id, i_class_id, i_category_id \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"A\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" CROSS JOIN \"_U_1\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) ) SELECT \"A\".\"CHANNEL\" AS \"CHANNEL\" , \"A\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"A\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"A\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"A\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"A\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"A\" AS \"A\" GROUP BY \"A\".\"CHANNEL\" , \"A\".\"I_BRAND_ID\" , \"A\".\"I_CLASS_ID\" , \"A\".\"I_CATEGORY_ID\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS A GROUP BY CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales)) \nGROUP BY channel, i_brand_id, i_class_id, i_category_id /*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"_Q_1\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" CROSS JOIN \"_U_1\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) ) SELECT \"_Q_1\".\"CHANNEL\" AS \"CHANNEL\" , \"_Q_1\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"_Q_1\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"_Q_1\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"_Q_1\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"_Q_1\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"_Q_1\" AS \"_Q_1\" GROUP BY \"_Q_1\".\"CHANNEL\" , \"_Q_1\".\"I_BRAND_ID\" , \"_Q_1\".\"I_CLASS_ID\" , \"_Q_1\".\"I_CATEGORY_ID\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) GROUP BY CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id) \nGROUP  BY channel, \n          i_brand_id, \n          i_class_id, \n          i_category_id; \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"_Q_1\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" ) SELECT \"_Q_1\".\"CHANNEL\" AS \"CHANNEL\" , \"_Q_1\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"_Q_1\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"_Q_1\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"_Q_1\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"_Q_1\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"_Q_1\" AS \"_Q_1\" GROUP BY \"_Q_1\".\"CHANNEL\" , \"_Q_1\".\"I_BRAND_ID\" , \"_Q_1\".\"I_CLASS_ID\" , \"_Q_1\".\"I_CATEGORY_ID\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID ) GROUP BY CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  iss.i_item_sk = ss_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  ics.i_item_sk = cs_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  iws.i_item_sk = ws_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store'                          channel, \n              iss.i_brand_id, \n              iss.i_class_id, \n              iss.i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item iss, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = iss.i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY iss.i_brand_id, \n                 iss.i_class_id, \n                 iss.i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              ics.i_brand_id, \n              ics.i_class_id, \n              ics.i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item ics, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = ics.i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY ics.i_brand_id, \n                 ics.i_class_id, \n                 ics.i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              iws.i_brand_id, \n              iws.i_class_id, \n              iws.i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item iws, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = iws.i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY iws.i_brand_id, \n                 iws.i_class_id, \n                 iws.i_category_id) total_sales \nGROUP BY channel, \n         i_brand_id, \n         i_class_id, \n         i_category_id \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ISS\" AS ( SELECT \"ISS\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ISS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ISS\" ) , \"ICS\" AS ( SELECT \"ICS\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ICS\" ) , \"IWS\" AS ( SELECT \"IWS\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"IWS\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ISS\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ICS\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"IWS\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"TOTAL_SALES\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ISS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ISS\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ISS\".\"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ICS\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ICS\".\"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"IWS\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"IWS\".\"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" ) SELECT \"TOTAL_SALES\".\"CHANNEL\" AS \"CHANNEL\" , \"TOTAL_SALES\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"TOTAL_SALES\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"TOTAL_SALES\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"TOTAL_SALES\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"TOTAL_SALES\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"TOTAL_SALES\" AS \"TOTAL_SALES\" GROUP BY \"TOTAL_SALES\".\"CHANNEL\" , \"TOTAL_SALES\".\"I_BRAND_ID\" , \"TOTAL_SALES\".\"I_CLASS_ID\" , \"TOTAL_SALES\".\"I_CATEGORY_ID\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"ISS\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ISS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ISS\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 0.326158,
                    "execution_time": 0.13117,
                    "compile_time": 0.000263,
                    "planning_time": 0.02366,
                    "create_size": 896
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 0.38107,
                    "execution_time": 0.125408,
                    "compile_time": 0.000268,
                    "planning_time": 0.083828,
                    "create_size": 896
                }
            },
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_5\" AS SELECT \"ICS\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ICS\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 0.311366,
                    "execution_time": 0.117866,
                    "compile_time": 0.000241,
                    "planning_time": 0.022729,
                    "create_size": 896
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 0.379948,
                    "execution_time": 0.125877,
                    "compile_time": 0.000244,
                    "planning_time": 0.082794,
                    "create_size": 896
                }
            },
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"IWS\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"IWS\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 0.317923,
                    "execution_time": 0.121497,
                    "compile_time": 0.00026,
                    "planning_time": 0.025629,
                    "create_size": 896
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 0.378763,
                    "execution_time": 0.124759,
                    "compile_time": 0.000251,
                    "planning_time": 0.083253,
                    "create_size": 896
                }
            },
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_7\" AS SELECT \"SPEQLITE_TEMP_TABLE_4\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"SPEQLITE_TEMP_TABLE_4\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"SPEQLITE_TEMP_TABLE_4\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"SPEQLITE_TEMP_TABLE_4\" AS \"SPEQLITE_TEMP_TABLE_4\" ON \"SPEQLITE_TEMP_TABLE_4\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"SPEQLITE_TEMP_TABLE_5\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"SPEQLITE_TEMP_TABLE_5\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"SPEQLITE_TEMP_TABLE_5\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"SPEQLITE_TEMP_TABLE_5\" AS \"SPEQLITE_TEMP_TABLE_5\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"SPEQLITE_TEMP_TABLE_5\".\"I_ITEM_SK\" INTERSECT SELECT \"SPEQLITE_TEMP_TABLE_6\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"SPEQLITE_TEMP_TABLE_6\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"SPEQLITE_TEMP_TABLE_6\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"SPEQLITE_TEMP_TABLE_6\" AS \"SPEQLITE_TEMP_TABLE_6\" ON \"SPEQLITE_TEMP_TABLE_6\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 34.342099,
                    "execution_time": 34.211936,
                    "compile_time": 0.000831,
                    "planning_time": 0.073484,
                    "create_size": 192
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 33.943269,
                    "execution_time": 33.7082,
                    "compile_time": 0.000807,
                    "planning_time": 0.178647,
                    "create_size": 192
                }
            },
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_8\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE ISS.I_ITEM_SK = SS_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE ICS.I_ITEM_SK = CS_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE IWS.I_ITEM_SK = WS_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , ISS.I_BRAND_ID , ISS.I_CLASS_ID , ISS.I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM AS ISS , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY ISS.I_BRAND_ID , ISS.I_CLASS_ID , ISS.I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM AS IWS , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID ) AS TOTAL_SALES GROUP BY CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": null,
        "optimize": null,
        "create": null,
        "query": null,
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": null,
        "optimize": null,
        "create": null,
        "query": null,
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": " \n\n-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales)) y \nGROUP BY channel, \n         i_brand_id, \n         i_class_id, \n         i_category_id\n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"Y\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" CROSS JOIN \"_U_1\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) ) SELECT \"Y\".\"CHANNEL\" AS \"CHANNEL\" , \"Y\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"Y\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"Y\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"Y\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"Y\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"Y\" AS \"Y\" GROUP BY \"Y\".\"CHANNEL\" , \"Y\".\"I_BRAND_ID\" , \"Y\".\"I_CLASS_ID\" , \"Y\".\"I_CATEGORY_ID\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_8\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS Y GROUP BY CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": " \n\n-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales)) y \nGROUP  BY rollup ( channel, i_brand_id, i_class_id, i_category_id ) \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"Y\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" CROSS JOIN \"_U_1\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) ) SELECT \"Y\".\"CHANNEL\" AS \"CHANNEL\" , \"Y\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"Y\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"Y\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"Y\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"Y\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"Y\" AS \"Y\" GROUP BY ROLLUP ( \"Y\".\"CHANNEL\" , \"Y\".\"I_BRAND_ID\" , \"Y\".\"I_CLASS_ID\" , \"Y\".\"I_CATEGORY_ID\" )"
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_8\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS Y GROUP BY ROLLUP ( CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID ) LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": null,
        "optimize": null,
        "create": null,
        "query": null,
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": null,
        "optimize": null,
        "create": null,
        "query": null,
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": " \n\n-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk AS ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) AS average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store' AS channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog' AS channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web' AS channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales)) y \nGROUP  BY rollup ( channel, i_brand_id, i_class_id, i_category_id ) \nORDER  BY channel, \n          i_brand_id, \n          i_class_id /*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"Y\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" CROSS JOIN \"_U_1\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) ) SELECT \"Y\".\"CHANNEL\" AS \"CHANNEL\" , \"Y\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"Y\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"Y\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"Y\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"Y\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"Y\" AS \"Y\" GROUP BY ROLLUP ( \"Y\".\"CHANNEL\" , \"Y\".\"I_BRAND_ID\" , \"Y\".\"I_CLASS_ID\" , \"Y\".\"I_CATEGORY_ID\" ) ORDER BY \"CHANNEL\" NULLS LAST , \"I_BRAND_ID\" NULLS LAST , \"I_CLASS_ID\" NULLS LAST"
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_8\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS Y GROUP BY ROLLUP ( CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID ) ORDER BY CHANNEL NULLS FIRST , I_BRAND_ID NULLS FIRST , I_CLASS_ID NULLS FIRST LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": " \n\n-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales)) y \nGROUP  BY rollup ( channel, i_brand_id, i_class_id, i_category_id ) \nORDER  BY channel, \n          i_brand_id, \n          i_class_id, \n          i_category_id\n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"Y\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" CROSS JOIN \"_U_1\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) ) SELECT \"Y\".\"CHANNEL\" AS \"CHANNEL\" , \"Y\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"Y\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"Y\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"Y\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"Y\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"Y\" AS \"Y\" GROUP BY ROLLUP ( \"Y\".\"CHANNEL\" , \"Y\".\"I_BRAND_ID\" , \"Y\".\"I_CLASS_ID\" , \"Y\".\"I_CATEGORY_ID\" ) ORDER BY \"CHANNEL\" NULLS LAST , \"I_BRAND_ID\" NULLS LAST , \"I_CLASS_ID\" NULLS LAST , \"I_CATEGORY_ID\" NULLS LAST"
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_8\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS Y GROUP BY ROLLUP ( CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID ) ORDER BY CHANNEL NULLS FIRST , I_BRAND_ID NULLS FIRST , I_CLASS_ID NULLS FIRST , I_CATEGORY_ID NULLS FIRST LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": " \n\n-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales)) y \nGROUP  BY rollup ( channel, i_brand_id, i_class_id, i_category_id ) \nORDER  BY channel, \n          i_brand_id, \n          i_class_id, \n          i_category_id\nLIMIT 100\n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"_Q_0\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X\" AS \"X\" ) , \"_U_1\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"_Q_0\" AS \"_Q_0\" ON \"_Q_0\".\"BRAND_ID\" = \"ITEM\".\"I_BRAND_ID\" AND \"_Q_0\".\"CATEGORY_ID\" = \"ITEM\".\"I_CATEGORY_ID\" AND \"_Q_0\".\"CLASS_ID\" = \"ITEM\".\"I_CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" , \"DATE_DIM\".\"D_MOY\" AS \"D_MOY\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_MOY\" = 11 AND \"DATE_DIM\".\"D_YEAR\" = 2001 ) , \"Y\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_1\" AS \"_U_1\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_1\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) UNION ALL SELECT 'catalog' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" CROSS JOIN \"_U_1\" AS \"_U_3\" LEFT JOIN \"_U_0\" AS \"_U_2\" ON \"_U_2\".\"SS_ITEM_SK\" = \"CATALOG_SALES\".\"CS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ITEM\".\"I_ITEM_SK\" WHERE NOT \"_U_2\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_3\".\"AVERAGE_SALES\" ) < SUM ( \"CATALOG_SALES\".\"CS_QUANTITY\" * \"CATALOG_SALES\".\"CS_LIST_PRICE\" ) UNION ALL SELECT 'web' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"WEB_SALES\" AS \"WEB_SALES\" CROSS JOIN \"_U_1\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_4\" ON \"_U_4\".\"SS_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" WHERE NOT \"_U_4\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"WEB_SALES\".\"WS_QUANTITY\" * \"WEB_SALES\".\"WS_LIST_PRICE\" ) ) SELECT \"Y\".\"CHANNEL\" AS \"CHANNEL\" , \"Y\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"Y\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"Y\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"Y\".\"SALES\" ) AS \"_COL_4\" , SUM ( \"Y\".\"NUMBER_SALES\" ) AS \"_COL_5\" FROM \"Y\" AS \"Y\" GROUP BY ROLLUP ( \"Y\".\"CHANNEL\" , \"Y\".\"I_BRAND_ID\" , \"Y\".\"I_CLASS_ID\" , \"Y\".\"I_CATEGORY_ID\" ) ORDER BY \"CHANNEL\" NULLS LAST , \"I_BRAND_ID\" NULLS LAST , \"I_CLASS_ID\" NULLS LAST , \"I_CATEGORY_ID\" NULLS LAST LIMIT 100"
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_8\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS Y GROUP BY ROLLUP ( CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID ) ORDER BY CHANNEL NULLS FIRST , I_BRAND_ID NULLS FIRST , I_CLASS_ID NULLS FIRST , I_CATEGORY_ID NULLS FIRST LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    }
]