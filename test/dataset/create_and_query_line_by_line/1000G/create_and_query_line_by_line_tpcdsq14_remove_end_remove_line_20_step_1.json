[
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n/*CURSOR_IDENTIFIER*/\n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales) \n) previous_year ",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"_U_2\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_2\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_2\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"PREVIOUS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_4\" CROSS JOIN \"DATE_DIM\" AS \"DATE_DIM\" CROSS JOIN \"ITEM\" AS \"ITEM\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_4\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"PREVIOUS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"PREVIOUS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"PREVIOUS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"PREVIOUS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"PREVIOUS_YEAR\".\"SALES\" AS \"SALES\" , \"PREVIOUS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" CROSS JOIN \"PREVIOUS_YEAR\" AS \"PREVIOUS_YEAR\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_1\" AS SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 0.314257,
                    "execution_time": 0.120485,
                    "compile_time": 0.000243,
                    "planning_time": 0.022868,
                    "create_size": 896
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 1.337561,
                    "execution_time": 1.077752,
                    "compile_time": 0.000248,
                    "planning_time": 0.086177,
                    "create_size": 896
                }
            },
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_2\" AS SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 34.028343,
                    "execution_time": 33.894216,
                    "compile_time": 0.000746,
                    "planning_time": 0.079353,
                    "create_size": 192
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 41.132224,
                    "execution_time": 40.875343,
                    "compile_time": 0.000755,
                    "planning_time": 0.200284,
                    "create_size": 192
                }
            },
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_3\" AS SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 0.079989,
                    "execution_time": 0.031792,
                    "compile_time": 0.000242,
                    "planning_time": 0.024325,
                    "create_size": 20
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 0.143688,
                    "execution_time": 0.031783,
                    "compile_time": 0.000232,
                    "planning_time": 0.08828,
                    "create_size": 20
                }
            },
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS PREVIOUS_YEAR LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n/*CURSOR_IDENTIFIER*/\n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales) \n) previous_year \n",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"_U_2\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_2\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_2\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"PREVIOUS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_4\" CROSS JOIN \"DATE_DIM\" AS \"DATE_DIM\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_4\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"PREVIOUS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"PREVIOUS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"PREVIOUS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"PREVIOUS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"PREVIOUS_YEAR\".\"SALES\" AS \"SALES\" , \"PREVIOUS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" CROSS JOIN \"PREVIOUS_YEAR\" AS \"PREVIOUS_YEAR\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS PREVIOUS_YEAR LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id) /*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"_U_1\" AS ( SELECT \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_DOM\" = 25 AND \"DATE_DIM\".\"D_MOY\" = 12 AND \"DATE_DIM\".\"D_YEAR\" = 2000 ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"AVG_SALES\" AS \"AVG_SALES\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"_U_1\" AS \"_U_1\" ON \"_U_1\".\"D_WEEK_SEQ\" = \"DATE_DIM\".\"D_WEEK_SEQ\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"AVG_SALES\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"_Q_0\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"_U_1\" AS \"_U_4\" ON \"_U_4\".\"D_WEEK_SEQ\" = \"DATE_DIM\".\"D_WEEK_SEQ\" WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"_Q_0\".\"CHANNEL\" AS \"CHANNEL\" , \"_Q_0\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"_Q_0\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"_Q_0\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"_Q_0\".\"SALES\" AS \"SALES\" , \"_Q_0\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" CROSS JOIN \"_Q_0\" AS \"_Q_0\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID ) LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales))/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_2\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"_U_1\" AS ( SELECT \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_DOM\" = 25 AND \"DATE_DIM\".\"D_MOY\" = 12 AND \"DATE_DIM\".\"D_YEAR\" = 2000 ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_2\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"_U_1\" AS \"_U_1\" ON \"_U_1\".\"D_WEEK_SEQ\" = \"DATE_DIM\".\"D_WEEK_SEQ\" WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_2\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"_Q_0\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"_U_1\" AS \"_U_4\" ON \"_U_4\".\"D_WEEK_SEQ\" = \"DATE_DIM\".\"D_WEEK_SEQ\" WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"_Q_0\".\"CHANNEL\" AS \"CHANNEL\" , \"_Q_0\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"_Q_0\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"_Q_0\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"_Q_0\".\"SALES\" AS \"SALES\" , \"_Q_0\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" CROSS JOIN \"_Q_0\" AS \"_Q_0\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               iss.i_brand_id, \n               iss.i_class_id, \n               iss.i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item iss, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = iss.i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY iss.i_brand_id, \n                  iss.i_class_id, \n                  iss.i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               iss.i_brand_id, \n               iss.i_class_id, \n               iss.i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item iss, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = iss.i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1998 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY iss.i_brand_id, \n                  iss.i_class_id, \n                  iss.i_category_id) previous_year\n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ISS\" AS ( SELECT \"ISS\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ISS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ISS\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ISS\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ISS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"AVG_SALES\" AS \"AVG_SALES\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ISS\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ISS\".\"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" HAVING MAX ( \"AVG_SALES\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"PREVIOUS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ISS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ISS\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 1998 WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ISS\".\"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"PREVIOUS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"PREVIOUS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"PREVIOUS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"PREVIOUS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"PREVIOUS_YEAR\".\"SALES\" AS \"SALES\" , \"PREVIOUS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" CROSS JOIN \"PREVIOUS_YEAR\" AS \"PREVIOUS_YEAR\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_4\" AS SELECT \"ISS\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ISS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ISS\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 0.31949,
                    "execution_time": 0.123669,
                    "compile_time": 0.00025,
                    "planning_time": 0.02454,
                    "create_size": 896
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 0.386684,
                    "execution_time": 0.124967,
                    "compile_time": 0.000255,
                    "planning_time": 0.086908,
                    "create_size": 896
                }
            },
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_5\" AS SELECT \"SPEQLITE_TEMP_TABLE_4\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"SPEQLITE_TEMP_TABLE_4\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"SPEQLITE_TEMP_TABLE_4\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"SPEQLITE_TEMP_TABLE_4\" AS \"SPEQLITE_TEMP_TABLE_4\" ON \"SPEQLITE_TEMP_TABLE_4\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 33.549334,
                    "execution_time": 33.415427,
                    "compile_time": 0.000778,
                    "planning_time": 0.07828,
                    "create_size": 192
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 33.693575,
                    "execution_time": 33.422079,
                    "compile_time": 0.000776,
                    "planning_time": 0.216132,
                    "create_size": 192
                }
            },
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , ISS.I_BRAND_ID , ISS.I_CLASS_ID , ISS.I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM AS ISS , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY ISS.I_BRAND_ID , ISS.I_CLASS_ID , ISS.I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , ISS.I_BRAND_ID , ISS.I_CLASS_ID , ISS.I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM AS ISS , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1998 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY ISS.I_BRAND_ID , ISS.I_CLASS_ID , ISS.I_CATEGORY_ID ) AS PREVIOUS_YEAR LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) last_year\n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_2\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_2\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_2\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"LAST_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_YEAR\" = 1999 WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"LAST_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"LAST_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"LAST_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"LAST_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"LAST_YEAR\".\"SALES\" AS \"SALES\" , \"LAST_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" CROSS JOIN \"LAST_YEAR\" AS \"LAST_YEAR\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS LAST_YEAR LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": null,
        "optimize": null,
        "create": null,
        "query": null,
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id) /*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"AVG_SALES\" AS \"AVG_SALES\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"AVG_SALES\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"_Q_0\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 1999 WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"_Q_0\".\"CHANNEL\" AS \"CHANNEL\" , \"_Q_0\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"_Q_0\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"_Q_0\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"_Q_0\".\"SALES\" AS \"SALES\" , \"_Q_0\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" CROSS JOIN \"_Q_0\" AS \"_Q_0\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID ) LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id) /*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"AVG_SALES\" AS \"AVG_SALES\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"AVG_SALES\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"_Q_0\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 1999 WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"_Q_0\".\"CHANNEL\" AS \"CHANNEL\" , \"_Q_0\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"_Q_0\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"_Q_0\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"_Q_0\".\"SALES\" AS \"SALES\" , \"_Q_0\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" CROSS JOIN \"_Q_0\" AS \"_Q_0\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID ) LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": null,
        "optimize": null,
        "create": null,
        "query": null,
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": null,
        "optimize": null,
        "create": null,
        "query": null,
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_2\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_2\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_2\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"_Q_0\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 1999 WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"_Q_0\".\"CHANNEL\" AS \"CHANNEL\" , \"_Q_0\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"_Q_0\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"_Q_0\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"_Q_0\".\"SALES\" AS \"SALES\" , \"_Q_0\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" CROSS JOIN \"_Q_0\" AS \"_Q_0\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) last_year \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_2\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_2\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_2\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"LAST_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 1999 WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"LAST_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"LAST_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"LAST_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"LAST_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"LAST_YEAR\".\"SALES\" AS \"SALES\" , \"LAST_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" CROSS JOIN \"LAST_YEAR\" AS \"LAST_YEAR\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS LAST_YEAR LIMIT 21",
                "preview": "\n/*   channel  i_brand_id  i_class_id  i_category_id         sales  number_sales channel  i_brand_id  i_class_id  i_category_id        sales  number_sales\n0    store     6013003          13              6  3.702806e+07          9917   store     9013003          13              9  82451630.51         22442\n1    store     7014003          14              7  4.037231e+07         10958   store     9013003          13              9  82451630.51         22442\n2    store     8009004           9              8  4.438819e+07         11967   store     9013003          13              9  82451630.51         22442\n3    store     2004002           4              2  8.226526e+08        223446   store     9013003          13              9  82451630.51         22442\n4    store    10005015           5             10  2.085171e+07          5579   store     9013003          13              9  82451630.51         22442\n5    store     7008009           5              6  4.582238e+05           132   store     9013003          13              9  82451630.51         22442\n6    store     7007007           7              7  3.168137e+07          8738   store     9013003          13              9  82451630.51         22442\n7    store     2001002           1              2  8.480241e+08        229995   store     9013003          13              9  82451630.51         22442\n8    store     3004002          15              3  2.690381e+06           713   store     9013003          13              9  82451630.51         22442\n9    store     1003001           3              1  6.899597e+08        186933   store     9013003          13              9  82451630.51         22442\n10   store     4001001           4              2  4.316996e+06          1168   store     9013003          13              9  82451630.51         22442\n11   store     1003002           3              1  8.382580e+08        226900   store     9013003          13              9  82451630.51         22442\n12   store     4003001           3              4  6.417635e+08        174280   store     9013003          13              9  82451630.51         22442\n13   store     1002002           1              1  2.629329e+07          7057   store     9013003          13              9  82451630.51         22442\n14   store     6010005          10              2  9.681051e+05           274   store     9013003          13              9  82451630.51         22442\n15   store     1001001           1              1  6.699765e+08        181341   store     9013003          13              9  82451630.51         22442\n16   store     5004001           1              3  4.351259e+06          1137   store     9013003          13              9  82451630.51         22442\n17   store     9002006           1              9  4.170891e+06          1160   store     9013003          13              9  82451630.51         22442\n18   store     4001001           1              4  6.574954e+08        178119   store     9013003          13              9  82451630.51         22442\n...*/",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 56.040929,
                    "execution_time": 55.608762,
                    "compile_time": 0.002313,
                    "planning_time": 55.405235
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 59.011019,
                    "execution_time": 58.46303,
                    "compile_time": 0.003199,
                    "planning_time": 58.311696
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": "\n/*   channel  i_brand_id  i_class_id  i_category_id         sales  number_sales channel  i_brand_id  i_class_id  i_category_id        sales  number_sales\n0    store     6013003          13              6  3.702806e+07          9917   store     9013003          13              9  82451630.51         22442\n1    store     7014003          14              7  4.037231e+07         10958   store     9013003          13              9  82451630.51         22442\n2    store     8009004           9              8  4.438819e+07         11967   store     9013003          13              9  82451630.51         22442\n3    store     2004002           4              2  8.226526e+08        223446   store     9013003          13              9  82451630.51         22442\n4    store    10005015           5             10  2.085171e+07          5579   store     9013003          13              9  82451630.51         22442\n5    store     7008009           5              6  4.582238e+05           132   store     9013003          13              9  82451630.51         22442\n6    store     7007007           7              7  3.168137e+07          8738   store     9013003          13              9  82451630.51         22442\n7    store     2001002           1              2  8.480241e+08        229995   store     9013003          13              9  82451630.51         22442\n8    store     3004002          15              3  2.690381e+06           713   store     9013003          13              9  82451630.51         22442\n9    store     1003001           3              1  6.899597e+08        186933   store     9013003          13              9  82451630.51         22442\n10   store     4001001           4              2  4.316996e+06          1168   store     9013003          13              9  82451630.51         22442\n11   store     1003002           3              1  8.382580e+08        226900   store     9013003          13              9  82451630.51         22442\n12   store     4003001           3              4  6.417635e+08        174280   store     9013003          13              9  82451630.51         22442\n13   store     1002002           1              1  2.629329e+07          7057   store     9013003          13              9  82451630.51         22442\n14   store     6010005          10              2  9.681051e+05           274   store     9013003          13              9  82451630.51         22442\n15   store     1001001           1              1  6.699765e+08        181341   store     9013003          13              9  82451630.51         22442\n16   store     5004001           1              3  4.351259e+06          1137   store     9013003          13              9  82451630.51         22442\n17   store     9002006           1              9  4.170891e+06          1160   store     9013003          13              9  82451630.51         22442\n18   store     4001001           1              4  6.574954e+08        178119   store     9013003          13              9  82451630.51         22442\n...*/"
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) last_year \nWHERE  this_year.i_brand_id = last_year.i_brand_id \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_2\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_2\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_2\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"LAST_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 1999 WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"LAST_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"LAST_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"LAST_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"LAST_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"LAST_YEAR\".\"SALES\" AS \"SALES\" , \"LAST_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" JOIN \"LAST_YEAR\" AS \"LAST_YEAR\" ON \"LAST_YEAR\".\"I_BRAND_ID\" = \"THIS_YEAR\".\"I_BRAND_ID\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS LAST_YEAR WHERE THIS_YEAR.I_BRAND_ID = LAST_YEAR.I_BRAND_ID LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) last_year \nWHERE  this_year.i_brand_id = last_year.i_brand_id \n       AND this_year.i_class_id = last_year.i_class_id \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_2\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_2\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_2\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"LAST_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 1999 WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"LAST_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"LAST_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"LAST_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"LAST_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"LAST_YEAR\".\"SALES\" AS \"SALES\" , \"LAST_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" JOIN \"LAST_YEAR\" AS \"LAST_YEAR\" ON \"LAST_YEAR\".\"I_BRAND_ID\" = \"THIS_YEAR\".\"I_BRAND_ID\" AND \"LAST_YEAR\".\"I_CLASS_ID\" = \"THIS_YEAR\".\"I_CLASS_ID\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS LAST_YEAR WHERE THIS_YEAR.I_BRAND_ID = LAST_YEAR.I_BRAND_ID AND THIS_YEAR.I_CLASS_ID = LAST_YEAR.I_CLASS_ID LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) last_year \nWHERE  this_year.i_brand_id = last_year.i_brand_id \n       AND this_year.i_class_id = last_year.i_class_id \n       AND this_year.i_category_id = last_year.i_category_id \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_2\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_2\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_2\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"LAST_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 1999 WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"LAST_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"LAST_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"LAST_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"LAST_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"LAST_YEAR\".\"SALES\" AS \"SALES\" , \"LAST_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" JOIN \"LAST_YEAR\" AS \"LAST_YEAR\" ON \"LAST_YEAR\".\"I_BRAND_ID\" = \"THIS_YEAR\".\"I_BRAND_ID\" AND \"LAST_YEAR\".\"I_CATEGORY_ID\" = \"THIS_YEAR\".\"I_CATEGORY_ID\" AND \"LAST_YEAR\".\"I_CLASS_ID\" = \"THIS_YEAR\".\"I_CLASS_ID\""
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS LAST_YEAR WHERE THIS_YEAR.I_BRAND_ID = LAST_YEAR.I_BRAND_ID AND THIS_YEAR.I_CLASS_ID = LAST_YEAR.I_CLASS_ID AND THIS_YEAR.I_CATEGORY_ID = LAST_YEAR.I_CATEGORY_ID LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) last_year \nWHERE  this_year.i_brand_id = last_year.i_brand_id \n       AND this_year.i_class_id = last_year.i_class_id \n       AND this_year.i_category_id = last_year.i_category_id \nORDER  BY this_year.channel, \n          this_year.sales DESC \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_2\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_2\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_2\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"LAST_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 1999 WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"LAST_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"LAST_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"LAST_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"LAST_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"LAST_YEAR\".\"SALES\" AS \"SALES\" , \"LAST_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" JOIN \"LAST_YEAR\" AS \"LAST_YEAR\" ON \"LAST_YEAR\".\"I_BRAND_ID\" = \"THIS_YEAR\".\"I_BRAND_ID\" AND \"LAST_YEAR\".\"I_CATEGORY_ID\" = \"THIS_YEAR\".\"I_CATEGORY_ID\" AND \"LAST_YEAR\".\"I_CLASS_ID\" = \"THIS_YEAR\".\"I_CLASS_ID\" ORDER BY \"THIS_YEAR\".\"CHANNEL\" NULLS LAST , \"THIS_YEAR\".\"SALES\" DESC NULLS FIRST"
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS LAST_YEAR WHERE THIS_YEAR.I_BRAND_ID = LAST_YEAR.I_BRAND_ID AND THIS_YEAR.I_CLASS_ID = LAST_YEAR.I_CLASS_ID AND THIS_YEAR.I_CATEGORY_ID = LAST_YEAR.I_CATEGORY_ID ORDER BY THIS_YEAR.CHANNEL NULLS FIRST , THIS_YEAR.SALES DESC NULLS LAST LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) last_year \nWHERE  this_year.i_brand_id = last_year.i_brand_id \n       AND this_year.i_class_id = last_year.i_class_id \n       AND this_year.i_category_id = last_year.i_category_id \nORDER  BY this_year.channel, \n          this_year.i_brand_id \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_2\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_2\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_2\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"LAST_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 1999 WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"LAST_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"LAST_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"LAST_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"LAST_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"LAST_YEAR\".\"SALES\" AS \"SALES\" , \"LAST_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" JOIN \"LAST_YEAR\" AS \"LAST_YEAR\" ON \"LAST_YEAR\".\"I_BRAND_ID\" = \"THIS_YEAR\".\"I_BRAND_ID\" AND \"LAST_YEAR\".\"I_CATEGORY_ID\" = \"THIS_YEAR\".\"I_CATEGORY_ID\" AND \"LAST_YEAR\".\"I_CLASS_ID\" = \"THIS_YEAR\".\"I_CLASS_ID\" ORDER BY \"THIS_YEAR\".\"CHANNEL\" NULLS LAST , \"THIS_YEAR\".\"I_BRAND_ID\" NULLS LAST"
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS LAST_YEAR WHERE THIS_YEAR.I_BRAND_ID = LAST_YEAR.I_BRAND_ID AND THIS_YEAR.I_CLASS_ID = LAST_YEAR.I_CLASS_ID AND THIS_YEAR.I_CATEGORY_ID = LAST_YEAR.I_CATEGORY_ID ORDER BY THIS_YEAR.CHANNEL NULLS FIRST , THIS_YEAR.I_BRAND_ID NULLS FIRST LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               iss.i_brand_id, \n               iss.i_class_id, \n               iss.i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item iss, \n               date_dim d \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = iss.i_item_sk \n               AND ss_sold_date_sk = d.d_date_sk \n               AND d.d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY iss.i_brand_id, \n                  iss.i_class_id, \n                  iss.i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               iss.i_brand_id, \n               iss.i_class_id, \n               iss.i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item iss, \n               date_dim d \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = iss.i_item_sk \n               AND ss_sold_date_sk = d.d_date_sk \n               AND d.d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY iss.i_brand_id, \n                  iss.i_class_id, \n                  iss.i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) last_year \nWHERE  this_year.i_brand_id = last_year.i_brand_id \n       AND this_year.i_class_id = last_year.i_class_id \n       AND this_year.i_category_id = last_year.i_category_id \nORDER  BY this_year.channel, \n          this_year.i_brand_id, \n          this_year.i_class_id \n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ISS\" AS ( SELECT \"ISS\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ISS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ISS\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ISS\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_2\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"D\" AS ( SELECT \"D\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"D\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"D\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ISS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_2\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"D\" AS \"D\" ON \"D\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ISS\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM\" ON \"D\".\"D_WEEK_SEQ\" = \"DATE_DIM\".\"D_WEEK_SEQ\" AND \"DATE_DIM\".\"D_DOM\" = 25 AND \"DATE_DIM\".\"D_MOY\" = 12 AND \"DATE_DIM\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ISS\".\"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_2\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"LAST_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ISS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"D\" AS \"D\" ON \"D\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ISS\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM\" ON \"D\".\"D_WEEK_SEQ\" = \"DATE_DIM\".\"D_WEEK_SEQ\" AND \"DATE_DIM\".\"D_DOM\" = 25 AND \"DATE_DIM\".\"D_MOY\" = 12 AND \"DATE_DIM\".\"D_YEAR\" = 1999 WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ISS\".\"I_BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"LAST_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"LAST_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"LAST_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"LAST_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"LAST_YEAR\".\"SALES\" AS \"SALES\" , \"LAST_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" JOIN \"LAST_YEAR\" AS \"LAST_YEAR\" ON \"LAST_YEAR\".\"I_BRAND_ID\" = \"THIS_YEAR\".\"I_BRAND_ID\" AND \"LAST_YEAR\".\"I_CATEGORY_ID\" = \"THIS_YEAR\".\"I_CATEGORY_ID\" AND \"LAST_YEAR\".\"I_CLASS_ID\" = \"THIS_YEAR\".\"I_CLASS_ID\" ORDER BY \"THIS_YEAR\".\"CHANNEL\" NULLS LAST , \"THIS_YEAR\".\"I_BRAND_ID\" NULLS LAST , \"THIS_YEAR\".\"I_CLASS_ID\" NULLS LAST"
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , ISS.I_BRAND_ID , ISS.I_CLASS_ID , ISS.I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D.D_DATE_SK AND D.D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY ISS.I_BRAND_ID , ISS.I_CLASS_ID , ISS.I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , ISS.I_BRAND_ID , ISS.I_CLASS_ID , ISS.I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D.D_DATE_SK AND D.D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY ISS.I_BRAND_ID , ISS.I_CLASS_ID , ISS.I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS LAST_YEAR WHERE THIS_YEAR.I_BRAND_ID = LAST_YEAR.I_BRAND_ID AND THIS_YEAR.I_CLASS_ID = LAST_YEAR.I_CLASS_ID AND THIS_YEAR.I_CATEGORY_ID = LAST_YEAR.I_CATEGORY_ID ORDER BY THIS_YEAR.CHANNEL NULLS FIRST , THIS_YEAR.I_BRAND_ID NULLS FIRST , THIS_YEAR.I_CLASS_ID NULLS FIRST LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) last_year \nWHERE  this_year.i_brand_id = last_year.i_brand_id \n       AND this_year.i_class_id = last_year.i_class_id \n       AND this_year.i_category_id = last_year.i_category_id \nORDER  BY this_year.channel, \n          this_year.i_brand_id, \n          this_year.i_class_id, \n          this_year.i_category_id\n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_2\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_2\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_2\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"LAST_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 1999 WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"LAST_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"LAST_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"LAST_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"LAST_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"LAST_YEAR\".\"SALES\" AS \"SALES\" , \"LAST_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" JOIN \"LAST_YEAR\" AS \"LAST_YEAR\" ON \"LAST_YEAR\".\"I_BRAND_ID\" = \"THIS_YEAR\".\"I_BRAND_ID\" AND \"LAST_YEAR\".\"I_CATEGORY_ID\" = \"THIS_YEAR\".\"I_CATEGORY_ID\" AND \"LAST_YEAR\".\"I_CLASS_ID\" = \"THIS_YEAR\".\"I_CLASS_ID\" ORDER BY \"THIS_YEAR\".\"CHANNEL\" NULLS LAST , \"THIS_YEAR\".\"I_BRAND_ID\" NULLS LAST , \"THIS_YEAR\".\"I_CLASS_ID\" NULLS LAST , \"THIS_YEAR\".\"I_CATEGORY_ID\" NULLS LAST"
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS LAST_YEAR WHERE THIS_YEAR.I_BRAND_ID = LAST_YEAR.I_BRAND_ID AND THIS_YEAR.I_CLASS_ID = LAST_YEAR.I_CLASS_ID AND THIS_YEAR.I_CATEGORY_ID = LAST_YEAR.I_CATEGORY_ID ORDER BY THIS_YEAR.CHANNEL NULLS FIRST , THIS_YEAR.I_BRAND_ID NULLS FIRST , THIS_YEAR.I_CLASS_ID NULLS FIRST , THIS_YEAR.I_CATEGORY_ID NULLS FIRST LIMIT 21",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": null
    },
    {
        "input": "WITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) x \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT  * \nFROM   (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 + 1 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) this_year, \n       (SELECT 'store'                          channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(ss_quantity * ss_list_price) sales, \n               Count(*)                         number_sales \n        FROM   store_sales, \n               item, \n               date_dim \n        WHERE  ss_item_sk IN (SELECT ss_item_sk \n                              FROM   cross_items) \n               AND ss_item_sk = i_item_sk \n               AND ss_sold_date_sk = d_date_sk \n               AND d_week_seq = (SELECT d_week_seq \n                                 FROM   date_dim \n                                 WHERE  d_year = 1999 \n                                        AND d_moy = 12 \n                                        AND d_dom = 25) \n        GROUP  BY i_brand_id, \n                  i_class_id, \n                  i_category_id \n        HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                   FROM   avg_sales)) last_year \nWHERE  this_year.i_brand_id = last_year.i_brand_id \n       AND this_year.i_class_id = last_year.i_class_id \n       AND this_year.i_category_id = last_year.i_category_id \nORDER  BY this_year.channel, \n          this_year.i_brand_id, \n          this_year.i_class_id, \n          this_year.i_category_id\nLIMIT 100\n/*CURSOR_IDENTIFIER*/",
        "optimize": [
            "WITH \"ITEM_2\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"I_ITEM_SK\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"ITEM\" AS \"ITEM\" ) , \"X\" AS ( SELECT \"ISS\".\"I_BRAND_ID\" AS \"BRAND_ID\" , \"ISS\".\"I_CLASS_ID\" AS \"CLASS_ID\" , \"ISS\".\"I_CATEGORY_ID\" AS \"CATEGORY_ID\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM\" AS \"D1\" ON \"D1\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AND \"D1\".\"D_YEAR\" <= 2001 AND \"D1\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ISS\" ON \"ISS\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" INTERSECT SELECT \"ICS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ICS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ICS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM\" AS \"D2\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"D2\".\"D_DATE_SK\" AND \"D2\".\"D_YEAR\" <= 2001 AND \"D2\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"ICS\" ON \"CATALOG_SALES\".\"CS_ITEM_SK\" = \"ICS\".\"I_ITEM_SK\" INTERSECT SELECT \"IWS\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"IWS\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"IWS\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM\" AS \"D3\" ON \"D3\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" AND \"D3\".\"D_YEAR\" <= 2001 AND \"D3\".\"D_YEAR\" >= 1999 JOIN \"ITEM\" AS \"IWS\" ON \"IWS\".\"I_ITEM_SK\" = \"WEB_SALES\".\"WS_ITEM_SK\" ) , \"DATE_DIM_2\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_YEAR\" AS \"D_YEAR\" FROM \"DATE_DIM\" AS \"DATE_DIM\" WHERE \"DATE_DIM\".\"D_YEAR\" <= 2001 AND \"DATE_DIM\".\"D_YEAR\" >= 1999 ) , \"X_2\" AS ( SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"DATE_DIM_2\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\" ) , \"AVG_SALES\" AS ( SELECT AVG ( \"X\".\"QUANTITY\" * \"X\".\"LIST_PRICE\" ) AS \"AVERAGE_SALES\" FROM \"X_2\" AS \"X\" ) , \"STORE_SALES_4\" AS ( SELECT \"STORE_SALES\".\"SS_SOLD_DATE_SK\" AS \"SS_SOLD_DATE_SK\" , \"STORE_SALES\".\"SS_ITEM_SK\" AS \"SS_ITEM_SK\" , \"STORE_SALES\".\"SS_QUANTITY\" AS \"SS_QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"SS_LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" ) , \"_U_2\" AS ( SELECT \"AVG_SALES\".\"AVERAGE_SALES\" AS \"AVERAGE_SALES\" FROM \"AVG_SALES\" AS \"AVG_SALES\" ) , \"_U_0\" AS ( SELECT \"ITEM\".\"I_ITEM_SK\" AS \"SS_ITEM_SK\" FROM \"ITEM_2\" AS \"ITEM\" JOIN \"X\" AS \"X\" ON \"ITEM\".\"I_BRAND_ID\" = \"X\".\"BRAND_ID\" AND \"ITEM\".\"I_CATEGORY_ID\" = \"X\".\"CATEGORY_ID\" AND \"ITEM\".\"I_CLASS_ID\" = \"X\".\"CLASS_ID\" GROUP BY \"ITEM\".\"I_ITEM_SK\" ) , \"DATE_DIM_3\" AS ( SELECT \"DATE_DIM\".\"D_DATE_SK\" AS \"D_DATE_SK\" , \"DATE_DIM\".\"D_WEEK_SEQ\" AS \"D_WEEK_SEQ\" FROM \"DATE_DIM\" AS \"DATE_DIM\" ) , \"THIS_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_2\" LEFT JOIN \"_U_0\" AS \"_U_0\" ON \"_U_0\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 2000 WHERE NOT \"_U_0\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_2\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) , \"LAST_YEAR\" AS ( SELECT 'store' AS \"CHANNEL\" , \"ITEM\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) AS \"SALES\" , COUNT ( * ) AS \"NUMBER_SALES\" FROM \"STORE_SALES_4\" AS \"STORE_SALES\" CROSS JOIN \"_U_2\" AS \"_U_5\" LEFT JOIN \"_U_0\" AS \"_U_3\" ON \"_U_3\".\"SS_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" JOIN \"ITEM_2\" AS \"ITEM\" ON \"ITEM\".\"I_ITEM_SK\" = \"STORE_SALES\".\"SS_ITEM_SK\" JOIN \"DATE_DIM\" AS \"DATE_DIM_2\" ON \"DATE_DIM\".\"D_WEEK_SEQ\" = \"DATE_DIM_2\".\"D_WEEK_SEQ\" AND \"DATE_DIM_2\".\"D_DOM\" = 25 AND \"DATE_DIM_2\".\"D_MOY\" = 12 AND \"DATE_DIM_2\".\"D_YEAR\" = 1999 WHERE NOT \"_U_3\".\"SS_ITEM_SK\" IS NULL GROUP BY \"ITEM\".\"I_BRAND_ID\" , \"ITEM\".\"I_CLASS_ID\" , \"ITEM\".\"I_CATEGORY_ID\" HAVING MAX ( \"_U_5\".\"AVERAGE_SALES\" ) < SUM ( \"STORE_SALES\".\"SS_QUANTITY\" * \"STORE_SALES\".\"SS_LIST_PRICE\" ) ) SELECT \"THIS_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"THIS_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"THIS_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"THIS_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"THIS_YEAR\".\"SALES\" AS \"SALES\" , \"THIS_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" , \"LAST_YEAR\".\"CHANNEL\" AS \"CHANNEL\" , \"LAST_YEAR\".\"I_BRAND_ID\" AS \"I_BRAND_ID\" , \"LAST_YEAR\".\"I_CLASS_ID\" AS \"I_CLASS_ID\" , \"LAST_YEAR\".\"I_CATEGORY_ID\" AS \"I_CATEGORY_ID\" , \"LAST_YEAR\".\"SALES\" AS \"SALES\" , \"LAST_YEAR\".\"NUMBER_SALES\" AS \"NUMBER_SALES\" FROM \"THIS_YEAR\" AS \"THIS_YEAR\" JOIN \"LAST_YEAR\" AS \"LAST_YEAR\" ON \"LAST_YEAR\".\"I_BRAND_ID\" = \"THIS_YEAR\".\"I_BRAND_ID\" AND \"LAST_YEAR\".\"I_CATEGORY_ID\" = \"THIS_YEAR\".\"I_CATEGORY_ID\" AND \"LAST_YEAR\".\"I_CLASS_ID\" = \"THIS_YEAR\".\"I_CLASS_ID\" ORDER BY \"THIS_YEAR\".\"CHANNEL\" NULLS LAST , \"THIS_YEAR\".\"I_BRAND_ID\" NULLS LAST , \"THIS_YEAR\".\"I_CLASS_ID\" NULLS LAST , \"THIS_YEAR\".\"I_CATEGORY_ID\" NULLS LAST LIMIT 100"
        ],
        "create": [
            {
                "create": "CREATE TEMPORARY TABLE \"SPEQLITE_TEMP_TABLE_6\" AS SELECT \"STORE_SALES\".\"SS_QUANTITY\" AS \"QUANTITY\" , \"STORE_SALES\".\"SS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"STORE_SALES\" AS \"STORE_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"STORE_SALES\".\"SS_SOLD_DATE_SK\" UNION ALL SELECT \"CATALOG_SALES\".\"CS_QUANTITY\" AS \"QUANTITY\" , \"CATALOG_SALES\".\"CS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"CATALOG_SALES\" AS \"CATALOG_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"CATALOG_SALES\".\"CS_SOLD_DATE_SK\" = \"DATE_DIM\".\"D_DATE_SK\" UNION ALL SELECT \"WEB_SALES\".\"WS_QUANTITY\" AS \"QUANTITY\" , \"WEB_SALES\".\"WS_LIST_PRICE\" AS \"LIST_PRICE\" FROM \"WEB_SALES\" AS \"WEB_SALES\" JOIN \"SPEQLITE_TEMP_TABLE_3\" AS \"DATE_DIM\" ON \"DATE_DIM\".\"D_DATE_SK\" = \"WEB_SALES\".\"WS_SOLD_DATE_SK\"",
                "retry_time": 0,
                "create_metrics": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                },
                "create_metrics_warm_up": {
                    "elapsed_time": 60,
                    "execution_time": -1,
                    "compile_time": -1,
                    "planning_time": -1,
                    "create_size": 0
                }
            }
        ],
        "query": [
            {
                "query": "WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT * FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 + 1 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS THIS_YEAR , ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_WEEK_SEQ = ( SELECT D_WEEK_SEQ FROM DATE_DIM WHERE D_YEAR = 1999 AND D_MOY = 12 AND D_DOM = 25 ) GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS LAST_YEAR WHERE THIS_YEAR.I_BRAND_ID = LAST_YEAR.I_BRAND_ID AND THIS_YEAR.I_CLASS_ID = LAST_YEAR.I_CLASS_ID AND THIS_YEAR.I_CATEGORY_ID = LAST_YEAR.I_CATEGORY_ID ORDER BY THIS_YEAR.CHANNEL NULLS FIRST , THIS_YEAR.I_BRAND_ID NULLS FIRST , THIS_YEAR.I_CLASS_ID NULLS FIRST , THIS_YEAR.I_CATEGORY_ID NULLS FIRST LIMIT 21",
                "preview": "\n/*   channel  i_brand_id  i_class_id  i_category_id         sales  number_sales channel  i_brand_id  i_class_id  i_category_id         sales  number_sales\n0    store     1001001           1              1  6.699765e+08        181341   store     1001001           1              1  1.286399e+09        349149\n1    store     1001002           1              1  8.235056e+08        223629   store     1001002           1              1  6.720553e+08        181864\n2    store     1002001           2              1  6.504350e+08        176084   store     1002001           2              1  1.264378e+09        343232\n3    store     1002002           2              1  8.397788e+08        228365   store     1002002           2              1  6.518996e+08        176083\n4    store     1003001           3              1  6.899597e+08        186933   store     1003001           3              1  1.302700e+09        353573\n5    store     1003002           3              1  8.382580e+08        226900   store     1003002           3              1  6.400382e+08        173055\n6    store     1004001           4              1  6.545507e+08        177002   store     1004001           4              1  1.290918e+09        349291\n7    store     1004002           4              1  8.183819e+08        222557   store     1004002           4              1  6.463611e+08        175236\n8    store     2001001           1              2  6.724767e+08        182331   store     2001001           1              2  1.276723e+09        346279\n9    store     2001002           1              2  8.480241e+08        229995   store     2001002           1              2  6.603916e+08        179435\n10   store     2002001           2              2  6.490147e+08        175392   store     2002001           2              2  1.268540e+09        343627\n11   store     2002002           2              2  8.035972e+08        217498   store     2002002           2              2  6.272775e+08        169420\n12   store     2003001           3              2  6.479146e+08        175765   store     2003001           3              2  1.271169e+09        343073\n13   store     2003002           3              2  7.622761e+08        206595   store     2003002           3              2  5.966743e+08        160699\n14   store     2004001           4              2  6.709051e+08        181924   store     2004001           4              2  1.319027e+09        357632\n15   store     2004002           4              2  8.226526e+08        223446   store     2004002           4              2  6.142975e+08        166618\n16   store     3001001           1              3  6.893121e+08        186689   store     3001001           1              3  1.333683e+09        361261\n17   store     3001002           1              3  8.246980e+08        223093   store     3001002           1              3  6.238730e+08        169058\n18   store     3002001           2              3  6.780400e+08        182762   store     3002001           2              3  1.284585e+09        347869\n...*/",
                "retry_time": 0,
                "query_metrics": {
                    "elapsed_time": 56.182685,
                    "execution_time": 55.74364,
                    "compile_time": 0.002326,
                    "planning_time": 55.549627
                },
                "query_metrics_warm_up": {
                    "elapsed_time": 58.47541,
                    "execution_time": 57.974571,
                    "compile_time": 0.177119,
                    "planning_time": 57.697813
                }
            }
        ],
        "rewrite_main_query": null,
        "preview": "\n/*   channel  i_brand_id  i_class_id  i_category_id         sales  number_sales channel  i_brand_id  i_class_id  i_category_id         sales  number_sales\n0    store     1001001           1              1  6.699765e+08        181341   store     1001001           1              1  1.286399e+09        349149\n1    store     1001002           1              1  8.235056e+08        223629   store     1001002           1              1  6.720553e+08        181864\n2    store     1002001           2              1  6.504350e+08        176084   store     1002001           2              1  1.264378e+09        343232\n3    store     1002002           2              1  8.397788e+08        228365   store     1002002           2              1  6.518996e+08        176083\n4    store     1003001           3              1  6.899597e+08        186933   store     1003001           3              1  1.302700e+09        353573\n5    store     1003002           3              1  8.382580e+08        226900   store     1003002           3              1  6.400382e+08        173055\n6    store     1004001           4              1  6.545507e+08        177002   store     1004001           4              1  1.290918e+09        349291\n7    store     1004002           4              1  8.183819e+08        222557   store     1004002           4              1  6.463611e+08        175236\n8    store     2001001           1              2  6.724767e+08        182331   store     2001001           1              2  1.276723e+09        346279\n9    store     2001002           1              2  8.480241e+08        229995   store     2001002           1              2  6.603916e+08        179435\n10   store     2002001           2              2  6.490147e+08        175392   store     2002001           2              2  1.268540e+09        343627\n11   store     2002002           2              2  8.035972e+08        217498   store     2002002           2              2  6.272775e+08        169420\n12   store     2003001           3              2  6.479146e+08        175765   store     2003001           3              2  1.271169e+09        343073\n13   store     2003002           3              2  7.622761e+08        206595   store     2003002           3              2  5.966743e+08        160699\n14   store     2004001           4              2  6.709051e+08        181924   store     2004001           4              2  1.319027e+09        357632\n15   store     2004002           4              2  8.226526e+08        223446   store     2004002           4              2  6.142975e+08        166618\n16   store     3001001           1              3  6.893121e+08        186689   store     3001001           1              3  1.333683e+09        361261\n17   store     3001002           1              3  8.246980e+08        223093   store     3001002           1              3  6.238730e+08        169058\n18   store     3002001           2              3  6.780400e+08        182762   store     3002001           2              3  1.284585e+09        347869\n...*/"
    }
]