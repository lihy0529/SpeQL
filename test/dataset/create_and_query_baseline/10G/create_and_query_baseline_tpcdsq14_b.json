{
    "input": " \n\n-- start query 14 in stream 0 using template query14.tpl \nWITH cross_items \n     AS (SELECT i_item_sk ss_item_sk \n         FROM   item, \n                (SELECT iss.i_brand_id    brand_id, \n                        iss.i_class_id    class_id, \n                        iss.i_category_id category_id \n                 FROM   store_sales, \n                        item iss, \n                        date_dim d1 \n                 WHERE  ss_item_sk = iss.i_item_sk \n                        AND ss_sold_date_sk = d1.d_date_sk \n                        AND d1.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT ics.i_brand_id, \n                        ics.i_class_id, \n                        ics.i_category_id \n                 FROM   catalog_sales, \n                        item ics, \n                        date_dim d2 \n                 WHERE  cs_item_sk = ics.i_item_sk \n                        AND cs_sold_date_sk = d2.d_date_sk \n                        AND d2.d_year BETWEEN 1999 AND 1999 + 2 \n                 INTERSECT \n                 SELECT iws.i_brand_id, \n                        iws.i_class_id, \n                        iws.i_category_id \n                 FROM   web_sales, \n                        item iws, \n                        date_dim d3 \n                 WHERE  ws_item_sk = iws.i_item_sk \n                        AND ws_sold_date_sk = d3.d_date_sk \n                        AND d3.d_year BETWEEN 1999 AND 1999 + 2) \n         WHERE  i_brand_id = brand_id \n                AND i_class_id = class_id \n                AND i_category_id = category_id), \n     avg_sales \n     AS (SELECT Avg(quantity * list_price) average_sales \n         FROM   (SELECT ss_quantity   quantity, \n                        ss_list_price list_price \n                 FROM   store_sales, \n                        date_dim \n                 WHERE  ss_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT cs_quantity   quantity, \n                        cs_list_price list_price \n                 FROM   catalog_sales, \n                        date_dim \n                 WHERE  cs_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2 \n                 UNION ALL \n                 SELECT ws_quantity   quantity, \n                        ws_list_price list_price \n                 FROM   web_sales, \n                        date_dim \n                 WHERE  ws_sold_date_sk = d_date_sk \n                        AND d_year BETWEEN 1999 AND 1999 + 2) x) \nSELECT channel, \n               i_brand_id, \n               i_class_id, \n               i_category_id, \n               Sum(sales), \n               Sum(number_sales) \nFROM  (SELECT 'store'                          channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ss_quantity * ss_list_price) sales, \n              Count(*)                         number_sales \n       FROM   store_sales, \n              item, \n              date_dim \n       WHERE  ss_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ss_item_sk = i_item_sk \n              AND ss_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ss_quantity * ss_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'catalog'                        channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(cs_quantity * cs_list_price) sales, \n              Count(*)                         number_sales \n       FROM   catalog_sales, \n              item, \n              date_dim \n       WHERE  cs_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND cs_item_sk = i_item_sk \n              AND cs_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(cs_quantity * cs_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales) \n       UNION ALL \n       SELECT 'web'                            channel, \n              i_brand_id, \n              i_class_id, \n              i_category_id, \n              Sum(ws_quantity * ws_list_price) sales, \n              Count(*)                         number_sales \n       FROM   web_sales, \n              item, \n              date_dim \n       WHERE  ws_item_sk IN (SELECT ss_item_sk \n                             FROM   cross_items) \n              AND ws_item_sk = i_item_sk \n              AND ws_sold_date_sk = d_date_sk \n              AND d_year = 1999 + 2 \n              AND d_moy = 11 \n       GROUP  BY i_brand_id, \n                 i_class_id, \n                 i_category_id \n       HAVING Sum(ws_quantity * ws_list_price) > (SELECT average_sales \n                                                  FROM   avg_sales)) y \nGROUP  BY rollup ( channel, i_brand_id, i_class_id, i_category_id ) \nORDER  BY channel, \n          i_brand_id, \n          i_class_id, \n          i_category_id\nLIMIT 100",
    "query": [
        {
            "query": "/* START QUERY 14 IN STREAM 0 USING TEMPLATE QUERY14.TPL */ WITH CROSS_ITEMS AS ( SELECT I_ITEM_SK AS SS_ITEM_SK FROM ITEM , ( SELECT ISS.I_BRAND_ID AS BRAND_ID , ISS.I_CLASS_ID AS CLASS_ID , ISS.I_CATEGORY_ID AS CATEGORY_ID FROM STORE_SALES , ITEM AS ISS , DATE_DIM AS D1 WHERE SS_ITEM_SK = ISS.I_ITEM_SK AND SS_SOLD_DATE_SK = D1.D_DATE_SK AND D1.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT ICS.I_BRAND_ID , ICS.I_CLASS_ID , ICS.I_CATEGORY_ID FROM CATALOG_SALES , ITEM AS ICS , DATE_DIM AS D2 WHERE CS_ITEM_SK = ICS.I_ITEM_SK AND CS_SOLD_DATE_SK = D2.D_DATE_SK AND D2.D_YEAR BETWEEN 1999 AND 1999 + 2 INTERSECT SELECT IWS.I_BRAND_ID , IWS.I_CLASS_ID , IWS.I_CATEGORY_ID FROM WEB_SALES , ITEM AS IWS , DATE_DIM AS D3 WHERE WS_ITEM_SK = IWS.I_ITEM_SK AND WS_SOLD_DATE_SK = D3.D_DATE_SK AND D3.D_YEAR BETWEEN 1999 AND 1999 + 2 ) WHERE I_BRAND_ID = BRAND_ID AND I_CLASS_ID = CLASS_ID AND I_CATEGORY_ID = CATEGORY_ID ) , AVG_SALES AS ( SELECT AVG ( QUANTITY * LIST_PRICE ) AS AVERAGE_SALES FROM ( SELECT SS_QUANTITY AS QUANTITY , SS_LIST_PRICE AS LIST_PRICE FROM STORE_SALES , DATE_DIM WHERE SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT CS_QUANTITY AS QUANTITY , CS_LIST_PRICE AS LIST_PRICE FROM CATALOG_SALES , DATE_DIM WHERE CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 UNION ALL SELECT WS_QUANTITY AS QUANTITY , WS_LIST_PRICE AS LIST_PRICE FROM WEB_SALES , DATE_DIM WHERE WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR BETWEEN 1999 AND 1999 + 2 ) AS X ) SELECT CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SALES ) , SUM ( NUMBER_SALES ) FROM ( SELECT 'store' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( SS_QUANTITY * SS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM STORE_SALES , ITEM , DATE_DIM WHERE SS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND SS_ITEM_SK = I_ITEM_SK AND SS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( SS_QUANTITY * SS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'catalog' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( CS_QUANTITY * CS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM CATALOG_SALES , ITEM , DATE_DIM WHERE CS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND CS_ITEM_SK = I_ITEM_SK AND CS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( CS_QUANTITY * CS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) UNION ALL SELECT 'web' AS CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID , SUM ( WS_QUANTITY * WS_LIST_PRICE ) AS SALES , COUNT ( * ) AS NUMBER_SALES FROM WEB_SALES , ITEM , DATE_DIM WHERE WS_ITEM_SK IN ( SELECT SS_ITEM_SK FROM CROSS_ITEMS ) AND WS_ITEM_SK = I_ITEM_SK AND WS_SOLD_DATE_SK = D_DATE_SK AND D_YEAR = 1999 + 2 AND D_MOY = 11 GROUP BY I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID HAVING SUM ( WS_QUANTITY * WS_LIST_PRICE ) > ( SELECT AVERAGE_SALES FROM AVG_SALES ) ) AS Y GROUP BY ROLLUP ( CHANNEL , I_BRAND_ID , I_CLASS_ID , I_CATEGORY_ID ) ORDER BY CHANNEL NULLS FIRST , I_BRAND_ID NULLS FIRST , I_CLASS_ID NULLS FIRST , I_CATEGORY_ID NULLS FIRST LIMIT 21",
            "preview": "\n/*    channel  i_brand_id  i_class_id  i_category_id           sum      sum\n0      None         NaN         NaN            NaN  6.747007e+09  1565036\n1   catalog         NaN         NaN            NaN  2.346154e+09   462023\n2   catalog   1001001.0         NaN            NaN  1.936925e+07     3828\n3   catalog   1001001.0         1.0            NaN  1.075728e+07     2150\n4   catalog   1001001.0         1.0            1.0  9.811454e+05      214\n5   catalog   1001001.0         1.0            2.0  1.183047e+06      211\n6   catalog   1001001.0         1.0            3.0  1.026092e+06      224\n7   catalog   1001001.0         1.0            4.0  1.600581e+06      317\n8   catalog   1001001.0         1.0            5.0  8.999585e+05      192\n9   catalog   1001001.0         1.0            6.0  8.660635e+05      171\n10  catalog   1001001.0         1.0            7.0  1.091627e+06      227\n11  catalog   1001001.0         1.0            8.0  1.069084e+06      207\n12  catalog   1001001.0         1.0            9.0  7.594944e+05      150\n13  catalog   1001001.0         1.0           10.0  1.280190e+06      237\n14  catalog   1001001.0         2.0            NaN  1.265663e+06      242\n15  catalog   1001001.0         2.0            1.0  2.843972e+05       52\n16  catalog   1001001.0         2.0            2.0  3.621920e+05       62\n17  catalog   1001001.0         2.0            3.0  1.119702e+05       19\n18  catalog   1001001.0         2.0            4.0  1.219008e+05       25\n...*/",
            "retry_time": 0,
            "query_metrics": {
                "elapsed_time": 1.382155,
                "execution_time": 0.826952,
                "compile_time": 0.037619,
                "planning_time": 0.996328
            },
            "query_metrics_warm_up": {
                "elapsed_time": 4.743634,
                "execution_time": 0.847706,
                "compile_time": 3.25627,
                "planning_time": 1.140781
            }
        }
    ],
    "preview": "\n/*    channel  i_brand_id  i_class_id  i_category_id           sum      sum\n0      None         NaN         NaN            NaN  6.747007e+09  1565036\n1   catalog         NaN         NaN            NaN  2.346154e+09   462023\n2   catalog   1001001.0         NaN            NaN  1.936925e+07     3828\n3   catalog   1001001.0         1.0            NaN  1.075728e+07     2150\n4   catalog   1001001.0         1.0            1.0  9.811454e+05      214\n5   catalog   1001001.0         1.0            2.0  1.183047e+06      211\n6   catalog   1001001.0         1.0            3.0  1.026092e+06      224\n7   catalog   1001001.0         1.0            4.0  1.600581e+06      317\n8   catalog   1001001.0         1.0            5.0  8.999585e+05      192\n9   catalog   1001001.0         1.0            6.0  8.660635e+05      171\n10  catalog   1001001.0         1.0            7.0  1.091627e+06      227\n11  catalog   1001001.0         1.0            8.0  1.069084e+06      207\n12  catalog   1001001.0         1.0            9.0  7.594944e+05      150\n13  catalog   1001001.0         1.0           10.0  1.280190e+06      237\n14  catalog   1001001.0         2.0            NaN  1.265663e+06      242\n15  catalog   1001001.0         2.0            1.0  2.843972e+05       52\n16  catalog   1001001.0         2.0            2.0  3.621920e+05       62\n17  catalog   1001001.0         2.0            3.0  1.119702e+05       19\n18  catalog   1001001.0         2.0            4.0  1.219008e+05       25\n...*/"
}