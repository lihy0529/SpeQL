{
    "input": "-- start template query44.tpl query 4 in stream 0\nselect /* TPC-DS query44.tpl 0.4 */  asceding.rnk, i1.i_product_name best_performing, i2.i_product_name worst_performing\nfrom(select *\n     from (select item_sk,rank() over (order by rank_col asc) rnk\n           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col \n                 from store_sales ss1\n                 where ss_store_sk = 639\n                 group by ss_item_sk\n                 having avg(ss_net_profit) > 0.90*(select avg(ss_net_profit) rank_col\n                                                  from store_sales\n                                                  where ss_store_sk = 639\n                                                    and ss_hdemo_sk is null\n                                                  group by ss_store_sk))V1)V11\n     where rnk  < 11) asceding,\n    (select *\n     from (select item_sk,rank() over (order by rank_col desc) rnk\n           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col\n                 from store_sales ss1\n                 where ss_store_sk = 639\n                 group by ss_item_sk\n                 having avg(ss_net_profit) > 0.90*(select avg(ss_net_profit) rank_col\n                                                  from store_sales\n                                                  where ss_store_sk = 639\n                                                    and ss_hdemo_sk is null\n                                                  group by ss_store_sk))V2)V21\n     where rnk  < 11) descending,\nitem i1,\nitem i2\nwhere asceding.rnk = descending.rnk \n  and i1.i_item_sk=asceding.item_sk\n  and i2.i_item_sk=descending.item_sk\norder by asceding.rnk\nlimit 100",
    "query": [
        {
            "query": "/* START TEMPLATE QUERY44.TPL QUERY 4 IN STREAM 0 */ /* TPC-DS QUERY44.TPL 0.4 */ SELECT ASCEDING.RNK , I1.I_PRODUCT_NAME AS BEST_PERFORMING , I2.I_PRODUCT_NAME AS WORST_PERFORMING FROM ( SELECT * FROM ( SELECT ITEM_SK , RANK ( ) OVER ( ORDER BY RANK_COL ASC NULLS FIRST ) AS RNK FROM ( SELECT SS_ITEM_SK AS ITEM_SK , AVG ( SS_NET_PROFIT ) AS RANK_COL FROM STORE_SALES AS SS1 WHERE SS_STORE_SK = 639 GROUP BY SS_ITEM_SK HAVING AVG ( SS_NET_PROFIT ) > 0.90 * ( SELECT AVG ( SS_NET_PROFIT ) AS RANK_COL FROM STORE_SALES WHERE SS_STORE_SK = 639 AND SS_HDEMO_SK IS NULL GROUP BY SS_STORE_SK ) ) AS V1 ) AS V11 WHERE RNK < 11 ) AS ASCEDING , ( SELECT * FROM ( SELECT ITEM_SK , RANK ( ) OVER ( ORDER BY RANK_COL DESC NULLS LAST ) AS RNK FROM ( SELECT SS_ITEM_SK AS ITEM_SK , AVG ( SS_NET_PROFIT ) AS RANK_COL FROM STORE_SALES AS SS1 WHERE SS_STORE_SK = 639 GROUP BY SS_ITEM_SK HAVING AVG ( SS_NET_PROFIT ) > 0.90 * ( SELECT AVG ( SS_NET_PROFIT ) AS RANK_COL FROM STORE_SALES WHERE SS_STORE_SK = 639 AND SS_HDEMO_SK IS NULL GROUP BY SS_STORE_SK ) ) AS V2 ) AS V21 WHERE RNK < 11 ) AS DESCENDING , ITEM AS I1 , ITEM AS I2 WHERE ASCEDING.RNK = DESCENDING.RNK AND I1.I_ITEM_SK = ASCEDING.ITEM_SK AND I2.I_ITEM_SK = DESCENDING.ITEM_SK ORDER BY ASCEDING.RNK NULLS FIRST LIMIT 21",
            "preview": "\n/*Empty DataFrame\nColumns: [rnk, best_performing, worst_performing]\nIndex: []*/",
            "retry_time": 0,
            "query_metrics": {
                "elapsed_time": 0.142435,
                "execution_time": 0.049764,
                "compile_time": 0.000649,
                "planning_time": 0.061548
            },
            "query_metrics_warm_up": {
                "elapsed_time": 4.92504,
                "execution_time": 0.041921,
                "compile_time": 4.71521,
                "planning_time": 0.134706
            }
        }
    ],
    "preview": "\n/*Empty DataFrame\nColumns: [rnk, best_performing, worst_performing]\nIndex: []*/"
}